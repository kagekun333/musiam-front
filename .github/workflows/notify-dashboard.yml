name: Notify dashboard to Slack (Daily KPI)

on:
  workflow_dispatch: {}
  schedule:
    - cron: "0 0 * * *" # 09:00 JST

permissions:
  contents: read

concurrency:
  group: notify-dashboard
  cancel-in-progress: true

jobs:
  notify:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      POSTHOG_API_KEY: ${{ secrets.POSTHOG_API_KEY }}
      POSTHOG_HOST: ${{ secrets.POSTHOG_HOST }}             # 例: https://eu.posthog.com
      POSTHOG_PROJECT_ID: ${{ secrets.POSTHOG_PROJECT_ID }} # 数字ID
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      DASHBOARD_URL: ${{ secrets.DASHBOARD_URL }}

    steps:
      - name: Validate secrets
        run: |
          : "${POSTHOG_API_KEY?Missing POSTHOG_API_KEY}"
          : "${POSTHOG_HOST?Missing POSTHOG_HOST}"
          : "${POSTHOG_PROJECT_ID?Missing POSTHOG_PROJECT_ID}"
          : "${SLACK_WEBHOOK_URL?Missing SLACK_WEBHOOK_URL}"
          : "${DASHBOARD_URL?Missing DASHBOARD_URL}"

      - name: Ensure jq & curl
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl

      - name: Build KPI message (HogQL → JSON → text)
        id: kpi
        shell: bash
        run: |
          set -euo pipefail

          base="${POSTHOG_HOST%/}/api/projects/${POSTHOG_PROJECT_ID}/query"
          auth="Authorization: Bearer ${POSTHOG_API_KEY}"

          call_hogql () {
            local q="$1"
            curl -sS -X POST "$base" \
              -H "Content-Type: application/json" \
              -H "$auth" \
              --data "$(jq -n --arg q "$q" '{query: {kind:"HogQLQuery", query:$q}}')"
          }

          # 1) 昨日24hの CTA 内訳
          Q1=$'SELECT properties.cta AS cta, count() AS clicks
               FROM events
               WHERE event = \'CTA_CLICK\' AND timestamp >= now() - INTERVAL 1 DAY
               GROUP BY cta
               ORDER BY clicks DESC
               LIMIT 5'
          R1=$(call_hogql "$Q1" || true)

          # 2) EVENT_CARD_CLICK → /events/* Pageview のCVR（ざっくり）
          #   ※ 期間中の総クリック数と、/events へのPVを使った近似CVR
          Q2a=$'SELECT count() AS clicks
                FROM events
                WHERE event = \'EVENT_CARD_CLICK\' AND timestamp >= now() - INTERVAL 1 DAY'
          Q2b=$'SELECT count() AS pv
                FROM events
                WHERE event = \'$pageview\'
                  AND timestamp >= now() - INTERVAL 1 DAY
                  AND match(properties.$current_url, \'\\/events(\\/|$)\')'
          R2a=$(call_hogql "$Q2a" || true)
          R2b=$(call_hogql "$Q2b" || true)

          # 3) 人気ルーム Top3
          Q3=$'SELECT properties.slug AS slug, count() AS enters
               FROM events
               WHERE event = \'ROOM_ENTER\' AND timestamp >= now() - INTERVAL 1 DAY
               GROUP BY slug
               ORDER BY enters DESC
               LIMIT 3'
          R3=$(call_hogql "$Q3" || true)

          # --- 整形（失敗時は空扱い） ---
          cta="$(echo "${R1:-}" | jq -r '[.results[]? | "\(.[0]): \(.[1])"] | join(", ")' 2>/dev/null || true)"
          clicks="$(echo "${R2a:-}" | jq -r '.results[0][0] // 0' 2>/dev/null || echo 0)"
          pv_events="$(echo "${R2b:-}" | jq -r '.results[0][0] // 0' 2>/dev/null || echo 0)"

          # CVRは 0割回避
          if [ "${clicks}" -gt 0 ]; then
            cvr=$(awk -v c="$clicks" -v p="$pv_events" 'BEGIN{ if(c==0){print "0.0%"} else {printf "%.1f%%", (p/c)*100} }')
          else
            cvr="0.0%"
          fi

          rooms="$(echo "${R3:-}" | jq -r '[.results[]? | "#\(.[:1][] // "" )", "\(.[])" ] | . as $a | []' 2>/dev/null || true)"
          # 上のワンライナーは複雑になりがちなので素直に作る
          rooms_text="$(echo "${R3:-}" | jq -r '
            if (.results|length)==0 then "" else
            ( [ range(0; (if (.results|length)>3 then 3 else (.results|length) end)) as $i
                | "\($i+1). \(.results[$i][0]) — \(.results[$i][1])"
              ] | join("\n") ) end
          ' 2>/dev/null || true)"

          # Slack本文
          title="MUSIAM — Daily KPI (24h)"
          today_utc=$(date -u +"%Y-%m-%d")
          kpi_text="*${title}*  \n_UTC ${today_utc}_\n\n• *CTA*: ${cta:-"(no data)"}\n• *CVR (EVENT→/events)*: ${cvr}\n• *Rooms Top3*\n${rooms_text:-"(no data)"}\n\n<${DASHBOARD_URL}|Open dashboard>"

          # 出力
          echo "kpi=${kpi_text//$'\n'/'\n'}" >> "$GITHUB_OUTPUT"

      - name: Post to Slack
        if: always()
        run: |
          set -euo pipefail
          payload=$(jq -n --arg t "${{ steps.kpi.outputs.kpi || '' }}" \
            '{text: ( $t | select(length>0) ) }')

          # 失敗/空の場合はリンクのみ
          if [ "$(echo "$payload" | jq -r '.text // empty')" = "" ]; then
            payload=$(jq -n --arg url "$DASHBOARD_URL" '{text: ("🔔 MUSIAM — Daily dashboard\n<"+$url+"|Open>")}')
          fi

          curl -i -X POST -H 'Content-type: application/json' \
            --data "$payload" \
            "$SLACK_WEBHOOK_URL"
